{
    "sourceFile": "api/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1757007868899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757007882588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,28 @@\n-import { connectDB, Event, Job } from '../db';\r\n-import authMiddleware from '../middleware/middleware';\r\n-import { scheduleEventReminder } from '../utils/reminderScheduler';\r\n+require('dotenv').config();\r\n+const express = require('express');\r\n+const { connectDB, Event, Job } = require('../db');\r\n+const authRoutes = require('../routes/auth');\r\n+const cors = require('cors');\r\n+const middlewaree = require('../middleware/middleware'); \r\n+const { scheduleEventReminder } = require('../utils/reminderScheduler');\r\n+const serverless = require('serverless-http');\r\n \r\n-export default async function handler(req, res) {\r\n-  await connectDB(); // lazy DB connection\r\n+const app = express();\r\n+app.use(express.json());\r\n+app.use(cors({ origin: 'YOUR_FRONTEND_URL', methods: ['GET','POST','PUT','DELETE'], credentials: true }));\r\n \r\n-  if (req.method === 'GET') {\r\n-    // Example: fetch events\r\n-    const events = await Event.find({});\r\n-    res.status(200).json(events);\r\n-  } else {\r\n-    res.status(405).json({ message: 'Method not allowed' });\r\n-  }\r\n-}\r\n+app.get('/health', (req, res) => res.send('ok'));\r\n+app.use('/api/admin', authRoutes);\r\n+app.use('/api/events', middlewaree);\r\n+app.use('/api/jobs', middlewaree);\r\n+\r\n+// Example route\r\n+app.get('/api/events', async (req, res) => {\r\n+  await connectDB();\r\n+  const events = await Event.find({ createdBy: req.admin.email, status: { $ne: 'DELETED' } });\r\n+  res.json(events);\r\n+});\r\n+\r\n+// other routes... same as before\r\n+\r\n+module.exports = serverless(app); // replace app.listen()\r\n"
                },
                {
                    "date": 1757007897381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,15 @@\n-require('dotenv').config();\r\n-const express = require('express');\r\n-const { connectDB, Event, Job } = require('../db');\r\n-const authRoutes = require('../routes/auth');\r\n-const cors = require('cors');\r\n-const middlewaree = require('../middleware/middleware'); \r\n-const { scheduleEventReminder } = require('../utils/reminderScheduler');\r\n-const serverless = require('serverless-http');\r\n+import { connectDB, Event, Job } from '../db';\r\n+import authMiddleware from '../middleware/middleware';\r\n+import { scheduleEventReminder } from '../utils/reminderScheduler';\r\n \r\n-const app = express();\r\n-app.use(express.json());\r\n-app.use(cors({ origin: 'YOUR_FRONTEND_URL', methods: ['GET','POST','PUT','DELETE'], credentials: true }));\r\n+export default async function handler(req, res) {\r\n+  await connectDB(); // lazy DB connection\r\n \r\n-app.get('/health', (req, res) => res.send('ok'));\r\n-app.use('/api/admin', authRoutes);\r\n-app.use('/api/events', middlewaree);\r\n-app.use('/api/jobs', middlewaree);\r\n-\r\n-// Example route\r\n-app.get('/api/events', async (req, res) => {\r\n-  await connectDB();\r\n-  const events = await Event.find({ createdBy: req.admin.email, status: { $ne: 'DELETED' } });\r\n-  res.json(events);\r\n-});\r\n-\r\n-// other routes... same as before\r\n-\r\n-module.exports = serverless(app); // replace app.listen()\r\n+  if (req.method === 'GET') {\r\n+    // Example: fetch events\r\n+    const events = await Event.find({});\r\n+    res.status(200).json(events);\r\n+  } else {\r\n+    res.status(405).json({ message: 'Method not allowed' });\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1757007948047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,28 @@\n-import { connectDB, Event, Job } from '../db';\r\n-import authMiddleware from '../middleware/middleware';\r\n-import { scheduleEventReminder } from '../utils/reminderScheduler';\r\n+require('dotenv').config();\r\n+const express = require('express');\r\n+const { connectDB, Event, Job } = require('../db');\r\n+const authRoutes = require('../routes/auth');\r\n+const cors = require('cors');\r\n+const middlewaree = require('../middleware/middleware'); \r\n+const { scheduleEventReminder } = require('../utils/reminderScheduler');\r\n+const serverless = require('serverless-http');\r\n \r\n-export default async function handler(req, res) {\r\n-  await connectDB(); // lazy DB connection\r\n+const app = express();\r\n+app.use(express.json());\r\n+app.use(cors({ origin: 'YOUR_FRONTEND_URL', methods: ['GET','POST','PUT','DELETE'], credentials: true }));\r\n \r\n-  if (req.method === 'GET') {\r\n-    // Example: fetch events\r\n-    const events = await Event.find({});\r\n-    res.status(200).json(events);\r\n-  } else {\r\n-    res.status(405).json({ message: 'Method not allowed' });\r\n-  }\r\n-}\r\n+app.get('/health', (req, res) => res.send('ok'));\r\n+app.use('/api/admin', authRoutes);\r\n+app.use('/api/events', middlewaree);\r\n+app.use('/api/jobs', middlewaree);\r\n+\r\n+// Example route\r\n+app.get('/api/events', async (req, res) => {\r\n+  await connectDB();\r\n+  const events = await Event.find({ createdBy: req.admin.email, status: { $ne: 'DELETED' } });\r\n+  res.json(events);\r\n+});\r\n+\r\n+// other routes... same as before\r\n+\r\n+module.exports = serverless(app); // replace app.listen()\r\n"
                }
            ],
            "date": 1757007868899,
            "name": "Commit-0",
            "content": "import { connectDB, Event, Job } from '../db';\r\nimport authMiddleware from '../middleware/middleware';\r\nimport { scheduleEventReminder } from '../utils/reminderScheduler';\r\n\r\nexport default async function handler(req, res) {\r\n  await connectDB(); // lazy DB connection\r\n\r\n  if (req.method === 'GET') {\r\n    // Example: fetch events\r\n    const events = await Event.find({});\r\n    res.status(200).json(events);\r\n  } else {\r\n    res.status(405).json({ message: 'Method not allowed' });\r\n  }\r\n}\r\n"
        }
    ]
}